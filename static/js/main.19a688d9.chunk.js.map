{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleChange","e","console","log","target","value","setState","txt","tmp","state","n","length","ntmp","concat","i","trans","className","TextField","id","label","multiline","maxRows","onChange","this","onClick","navigator","clipboard","writeText","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAuDeA,E,kDAjDb,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IAONC,aAAe,SAACC,GACdC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKC,SAAS,CACZC,IAAKN,EAAEG,OAAOC,QAEhB,IAAIG,EAAM,EAAKC,MAAMF,IACjBG,EAAIF,EAAIG,OACRC,EAAO,GACRF,EAAI,IACLE,EAAOA,EAAKC,OAAOL,EAAI,KAGzB,IAAI,IAAIM,EAAI,EAAEA,EAAE,EAAEJ,EAAEI,GAAG,EAErBF,GADAA,EAAOA,EAAKC,OAAOL,EAAIM,EAAI,KACfD,OAAOL,EAAIM,IAEzB,EAAKR,SAAS,CAAES,MAAQH,KAtBxB,EAAKH,MAAQ,CACXF,IAAK,GACLQ,MAAM,IAJS,E,0CA2BnB,WAAS,IAAD,OAEN,OACA,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,eAElB,sDACA,mGACA,cAACC,EAAA,EAAD,CACIC,GAAG,8BACHC,MAAM,kBACNC,WAAS,EACTC,QAAS,GACTC,SAAUC,KAAKvB,eAEnB,4BAAIuB,KAAKd,MAAMM,QACf,wBAAQS,QAAS,WAAOC,UAAUC,UAAUC,UAAU,EAAKlB,MAAMM,QAAjE,yB,GA5CYa,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.19a688d9.chunk.js","sourcesContent":["import TextField from '@mui/material/TextField';\nimport { Component } from 'react';\nimport './App.css'\n\n\nclass App extends Component{\n  constructor(props) {\n\t\tsuper(props);  \n    this.state = {\n      txt: '',\n      trans:''\n    };\n  }\n\n  handleChange = (e) => {\n    console.log(e.target.value)\n    this.setState({ \n      txt: e.target.value\n    })\n    var tmp = this.state.txt;\n    var n = tmp.length;\n    var ntmp = \"\";\n    if(n > 0) \n      ntmp = ntmp.concat(tmp[0]);\n    \n    // Implement Logic Here\n    for(let i = 1;i+1<n;i+=2){\n      ntmp = ntmp.concat(tmp[i + 1]);\n      ntmp = ntmp.concat(tmp[i]);\n    }\n    this.setState({ trans : ntmp });\n  } \n\t \n  render(){\n    \n    return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <h1> Keshav Transformer </h1>\n      <p> Enter any text and get the transformed version in Keshav style ! </p>\n      <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Enter Text Here\"\n          multiline\n          maxRows={10}\n          onChange={this.handleChange}\n        />\n      <p>{this.state.trans}</p>\n      <button onClick={() => {navigator.clipboard.writeText(this.state.trans)}}>Copy</button> \n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}