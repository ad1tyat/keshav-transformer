{"version":3,"sources":["static/ahk.ogg","App.js","reportWebVitals.js","index.js"],"names":["App","props","insert","arr","index","newItem","slice","isVowel","letter","Math","floor","random","indexOf","addH","handleChange","e","console","log","target","value","setState","txt","words","state","split","ntmp","ind","length","word","n","swaploc","i","concat","trans","onClick","navigator","clipboard","writeText","isPlaying","audio","play","Audio","song","className","TextField","id","label","multiline","maxRows","onChange","this","Button","variant","href","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30209792.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ahk.f4ff6619.ogg\";","import TextField from '@mui/material/TextField';\nimport { Component } from 'react';\nimport './App.css'\nimport song from \"./static/ahk.ogg\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Button from '@mui/material/Button';\n\nclass App extends Component{\n  constructor(props) {\n\t\tsuper(props);  \n    this.state = {\n      txt: '',\n      trans:'',\n      isPlaying:false,\n      audio : new Audio(song)\n    };\n  }\n  insert = (arr, index, newItem) => {\n    return([\n    // part of the array before the specified index\n    ...arr.slice(0, index),\n    // inserted item\n    newItem,\n    // part of the array after the specified index\n    ...arr.slice(index)\n    ])\n  }\n  \n  isVowel = (letter) => {\n    let shouldRepeat = Math.floor(Math.random()*4);\n    if(shouldRepeat === 1){\n      return (\"aeiouyAEIOUY\".indexOf(letter) !== -1); \n    }\n    else{\n      return 0;\n    }\n  }\n\n  addH = () =>{\n    let shouldRepeat = Math.floor(Math.random()*5);\n    if(shouldRepeat === 1){\n      return \"h\"\n    }else{\n      return \"\"\n    }\n  }\n\n  handleChange = (e) => {\n\n    console.log(e.target.value)\n    this.setState({ \n      txt: e.target.value\n    })\n    // var tmp = this.state.txt + \" \";\n    var tmp = this.state.txt ;\n    var words = tmp.split(\" \");\n    \n    var ntmp = \"\";\n    for(let ind = 0;ind < words.length;ind++){\n      var word = words[ind];\n      var n = word.length;\n      \n      if(n >= 3){\n        let shouldwap = Math.floor(Math.random()*2);\n        if(shouldwap === 1){\n        \n        let swaploc = 1 + Math.floor(Math.random() * (n - 2));\n        for(let i = 0;i+1<n;i++){\n          if(i !== swaploc){\n            if(this.isVowel(word[i])){\n              ntmp = ntmp.concat(this.addH());\n              ntmp = ntmp.concat(word[i]);\n            }\n            ntmp = ntmp.concat(word[i]);\n          }else{\n            if(this.isVowel(word[i + 1])){\n            \n              ntmp = ntmp.concat(this.addH());  \n            ntmp = ntmp.concat(word[i + 1]);\n          }\n            ntmp = ntmp.concat(word[i + 1]);\n            if(this.isVowel(word[i])){\n              \n              ntmp = ntmp.concat(this.addH());\n              ntmp = ntmp.concat(word[i]);\n            }\n            ntmp = ntmp.concat(word[i]);\n            i++;\n          }\n        }\n        if(n%2 === 1 && swaploc !== n - 2){\n          if(this.isVowel(word[n - 1])){\n            \n            \n              ntmp = ntmp.concat(this.addH());\n            ntmp = ntmp.concat(word[n - 1]);\n          }\n          ntmp = ntmp.concat(word[n - 1]);\n        }\n        ntmp = ntmp.concat(\" \");\n        }\n        else{\n          ntmp = ntmp.concat(word);\n          ntmp = ntmp.concat(\" \");\n            \n        }\n      }else{      \n        if(word === \"is\"){\n          ntmp = ntmp.concat(\" henga \");\n        }else{        \n          ntmp = ntmp.concat(word);\n          ntmp = ntmp.concat(\" \");\n        }\n      }\n      console.log(\"ntmp :\", ntmp);\n    }\n    this.setState({ trans : ntmp });\n  } \n\tonClick = () => {\n\n    navigator.clipboard.writeText(this.state.trans)\n\n    // Get state of song\n    let isPlaying = this.state.isPlaying;\n\n    if (isPlaying) {\n    } else {\n\n      // Play the song if it is paused\n      this.state.audio.play();\n    }\n\n    // Change the state of song\n    this.setState({ isPlaying: !isPlaying });\n  }\n  render(){\n    \n    return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <h1> Keshav Transformer </h1>\n      <p> Enter any text and get the transformed version in Keshav style ! </p>\n      <p>[Keep Audio On : ðŸ”Š]</p>\n      <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Enter Text Here\"\n          multiline\n          maxRows={10}\n          onChange={this.handleChange}\n        />\n      <p>{this.state.trans}</p>\n      <Button variant=\"outlined\" onClick={this.onClick}>Copy<ContentCopyIcon/></Button> \n      <h5><footer className=\"footer-1\"><a href=\"https://github.com/ad1tyat/keshav-transformer\">Source Code</a> || Made by <a href=\"https://github.com/ad1tyat/\">Aditya Trivedi</a></footer></h5>\n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}